version: '3'

services:
  inventory:
    build:
      context: ./services/inventory
    command: npm start
    networks:
      - dev_network
    ports:
      - "3002:3000"
    volumes:
      - ./logs/inventory:/var/log/app:rw
    env_file:
      - ./services/inventory/ci.env
    depends_on:
      - db
      - broker
  
  search:
    build:
      context: ./services/search
    command: npm start
    networks:
      - dev_network
    ports:
      - "3003:3000"
    volumes:
      - ./logs/search:/var/log/app:rw
    env_file:
      - ./services/search/ci.env
    depends_on:
      - elasticsearch
      - broker

  # Common Resource
  db:
    build:
      context: ./deployment-manifests/postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_pass
      TZ: UTC
    networks:
      - dev_network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=dev_pass
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - 9200:9200
    networks:
      - dev_network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dev_network

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - dev_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - broker
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
    ports:
      - 8004:8080
    networks:
      - dev_network
  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.8.1'
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    volumes:
      - ./deployment-manifests/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - '8003:5601'
    networks:
      - dev_network
    depends_on:
      - elasticsearch
  
  promtail:
    image: grafana/promtail:2.1.0
    ports:
      - 9080:9080
    command:
      - "--config.file=/etc/promtail/promtail.yml"
    volumes:
      - ./deployment-manifests/grafana-loki/promtail.yml:/etc/promtail/promtail.yml
      - ./logs:/var/log/app

networks:
  dev_network:
    driver: bridge